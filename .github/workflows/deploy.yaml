name: Build and deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PRIVATE_KEY: ${{ secrets.AWS_EC2_SSH_KEY }}
      HOST: ${{ secrets.AWS_EC2_HOST }}
      USER: ${{ secrets.AWS_EC2_USER }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Write SSH PEM
        run: echo "$PRIVATE_KEY" > github-ec2.pem && chmod 600 github-ec2.pem

      - name: Create env file and copy to EC2
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          # cat .env
          ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST} "mkdir -p env"
          scp -o StrictHostKeyChecking=no -i github-ec2.pem .env ${USER}@${HOST}:~/env

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i github-ec2.pem ${USER}@${HOST} '

          REPO_URL="git@github.com:trungnd3/dcube-teachers.git"
          BRANCH="main"
          REPO_DIR="$HOME/app"

          mkdir -p $REPO_DIR
          cp $HOME/env/.env $REPO_DIR

          if [ -d "$REPO_DIR/.git" ]; then
            cd "$REPO_DIR"
            git pull origin "$BRANCH"
          else
            git clone "$REPO_URL" "$REPO_DIR"
            cd "$REPO_DIR"
          fi

          docker build -t dcube-teachers .
          docker run --env-file .env -p 80:3000 dcube-teachers
          '
